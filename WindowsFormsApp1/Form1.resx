<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAgICABoCAgH6AgIDagICA6oCAgLiAgIA4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAICAgACAgICwgICA/4CAgP+AgID/gICA/4CAgPiAgIA8AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAgICARICAgP+AgID/gICA/4CAgP+AgID/gICA/4CAgMgAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgICAAICAgFKAgICggICApoCA
        gGiAgIAGAAAAAAAAAAAAAAAAAAAAAAAAAACAgICQgICA/4CAgP+AgID/gICA/4CAgP+AgID/gICA/ICA
        gAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAICAgACAgICegICA/4CA
        gP+AgID/gICA/4CAgMaAgIAQAAAAAAAAAACAgIAOgICAOoCAgNqAgID/gICA/4CAgP+AgID/gICA/4CA
        gP+AgID2gICAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgICAUoCA
        gP+AgID/gICA/4CAgP+AgID/gICA/4CAgMiAgIBogICAxICAgPyAgID/gICA/4CAgP+AgID/gICA/4CA
        gP+AgID/gICA/4CAgLoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACAgICggICA/4CAgP+AgID/gICA/4CAgP+AgID/gICA/4CAgP+AgID/gICA/4CAgP+AgID/gICA/4CA
        gP+AgID/gICA/4CAgP+AgID/gICAjgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAICAgKaAgID/gICA/4CAgP+AgID/gICA/4CAgP+AgID/gICA/4CAgP+AgID/gICA/4CA
        gP+AgID/gICA/4CAgP+AgID/gICA/4CAgP+AgID8gICAegAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAgICAaICAgP+AgID/gICA/4CAgP+AgID/gICA/4CAgP+AgID/gICA/4CA
        gP+AgID/gICA/4CAgP+AgID/gICA/4CAgP+AgID/gICA/4CAgP+AgID/gICAfAAAAAAAAAAAgICAAoCA
        gAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAgIAGgICAxoCAgP+AgID/gICA/4CAgP+AgID/gICA/4CA
        gP+AgID/gICA/4CAgOSAgIC8gICAvICAgOSAgID/gICA/4CAgP+AgID/gICA/4CAgP+AgID8gICAjoCA
        gLqAgID2gICA/ICAgMiAgIA8AAAAAAAAAAAAAAAAAAAAAAAAAACAgIAQgICAyICAgP+AgID/gICA/4CA
        gP+AgID/gICA/4CAgMSAgIA+gICAAAAAAAAAAAAAgICAAICAgD6AgIDEgICA/4CAgP+AgID/gICA/4CA
        gP+AgID/gICA/4CAgP+AgID/gICA/4CAgPiAgIA4AAAAAAAAAAAAAAAAAAAAAAAAAACAgIBogICA/4CA
        gP+AgID/gICA/4CAgP+AgICcgICABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAICAgASAgICcgICA/4CA
        gP+AgID/gICA/4CAgP+AgID/gICA/4CAgP+AgID/gICA/4CAgLgAAAAAAAAAAAAAAAAAAAAAAAAAAICA
        gMaAgID/gICA/4CAgP+AgID/gICAxICAgAQAAAAAgICACICAgHaAgIC8gICAvICAgHaAgIAIAAAAAICA
        gASAgIDEgICA/4CAgP+AgID/gICA/4CAgP+AgID/gICA/4CAgP+AgID/gICA6gAAAAAAAAAAAAAAAAAA
        AACAgIAQgICA/ICAgP+AgID/gICA/4CAgP+AgIA+AAAAAICAgAiAgIDGgICA/4CAgP+AgID/gICA/4CA
        gMaAgIAIAAAAAICAgD6AgID/gICA/4CAgP+AgID/gICA/4CAgP+AgID/gICA/4CAgP+AgIDaAAAAAAAA
        AAAAAAAAAAAAAICAgDqAgID/gICA/4CAgP+AgID/gICA5ICAgAAAAAAAgICAdoCAgP+AgID/gICA/4CA
        gP+AgID/gICA/4CAgHYAAAAAgICAAICAgOSAgID/gICA/4CAgP+AgID/gICA/4CAgP+AgID/gICA/4CA
        gH4AAAAAgICAAICAgESAgICQgICA2oCAgP+AgID/gICA/4CAgP+AgIC8AAAAAAAAAACAgIC8gICA/4CA
        gP+AgID/gICA/4CAgP+AgID/gICAvAAAAAAAAAAAgICAvICAgP+AgID/gICA/4CAgP+AgID/gICA/4CA
        gP+AgICwgICABoCAgAaAgICwgICA/4CAgP+AgID/gICA/4CAgP+AgID/gICA/4CAgLwAAAAAAAAAAICA
        gLyAgID/gICA/4CAgP+AgID/gICA/4CAgP+AgIC8AAAAAAAAAACAgIC8gICA/4CAgP+AgID/gICA/4CA
        gNqAgICQgICARICAgAAAAAAAgICAfoCAgP+AgID/gICA/4CAgP+AgID/gICA/4CAgP+AgID/gICA5ICA
        gAAAAAAAgICAdoCAgP+AgID/gICA/4CAgP+AgID/gICA/4CAgHYAAAAAgICAAICAgOSAgID/gICA/4CA
        gP+AgID/gICAOgAAAAAAAAAAAAAAAAAAAACAgIDagICA/4CAgP+AgID/gICA/4CAgP+AgID/gICA/4CA
        gP+AgID/gICAPgAAAACAgIAIgICAxoCAgP+AgID/gICA/4CAgP+AgIDGgICACAAAAACAgIA+gICA/4CA
        gP+AgID/gICA/4CAgPyAgIAQAAAAAAAAAAAAAAAAAAAAAICAgOqAgID/gICA/4CAgP+AgID/gICA/4CA
        gP+AgID/gICA/4CAgP+AgIDGgICABAAAAACAgIAIgICAdoCAgLyAgIC8gICAdoCAgAgAAAAAgICABICA
        gMSAgID/gICA/4CAgP+AgID/gICAxgAAAAAAAAAAAAAAAAAAAAAAAAAAgICAuICAgP+AgID/gICA/4CA
        gP+AgID/gICA/4CAgP+AgID/gICA/4CAgP+AgICcgICABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAICA
        gASAgICcgICA/4CAgP+AgID/gICA/4CAgP+AgIBoAAAAAAAAAAAAAAAAAAAAAAAAAACAgIA4gICA+ICA
        gP+AgID/gICA/4CAgP+AgID/gICA/4CAgP+AgID/gICA/4CAgP+AgIDGgICAPoCAgAAAAAAAAAAAAICA
        gACAgIA+gICAxICAgP+AgID/gICA/4CAgP+AgID/gICA/4CAgMiAgIAQAAAAAAAAAAAAAAAAAAAAAAAA
        AACAgIA8gICAyICAgPyAgID0gICAuoCAgI6AgID8gICA/4CAgP+AgID/gICA/4CAgP+AgID/gICA5ICA
        gLyAgIC8gICA5ICAgP+AgID/gICA/4CAgP+AgID/gICA/4CAgP+AgID/gICA/4CAgMaAgIAGAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAgICABoCAgAIAAAAAAAAAAICAgHyAgID/gICA/4CAgP+AgID/gICA/4CA
        gP+AgID/gICA/4CAgP+AgID/gICA/4CAgP+AgID/gICA/4CAgP+AgID/gICA/4CAgP+AgID/gICA/4CA
        gGgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAICAgHqAgID8gICA/4CA
        gP+AgID/gICA/4CAgP+AgID/gICA/4CAgP+AgID/gICA/4CAgP+AgID/gICA/4CAgP+AgID/gICA/4CA
        gP+AgID/gICApgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAICA
        gI6AgID/gICA/4CAgP+AgID/gICA/4CAgP+AgID/gICA/4CAgP+AgID/gICA/4CAgP+AgID/gICA/4CA
        gP+AgID/gICA/4CAgP+AgICgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAgICAuoCAgP+AgID/gICA/4CAgP+AgID/gICA/4CAgP+AgID/gICA/ICAgMSAgIBogICAyICA
        gP+AgID/gICA/4CAgP+AgID/gICA/4CAgFIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAICAgAKAgID0gICA/4CAgP+AgID/gICA/4CAgP+AgID/gICA2oCAgDqAgIAOAAAAAAAA
        AACAgIAQgICAxoCAgP+AgID/gICA/4CAgP+AgICegICAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAgICABoCAgPyAgID/gICA/4CAgP+AgID/gICA/4CAgP+AgICQAAAAAAAA
        AAAAAAAAAAAAAAAAAACAgIAGgICAaICAgKaAgICggICAUoCAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgICAyICAgP+AgID/gICA/4CAgP+AgID/gICA/4CA
        gEQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAgIA8gICA+ICAgP+AgID/gICA/4CA
        gP+AgICwgICAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAgIA4gICAuICA
        gOqAgIDagICAfoCAgAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA///H////A////wH//P4B//A+Af/wEAH/4AAB/+AAAf/wAAD/8AAAA/gH
        4AH8D/AA+B54APg4HAD4OBwB4DAMAYAwDAeAOBwfADgcHwAeeB8AD/A/gAfgH8AAAA//AAAP/4AAB/+A
        AAf/gAgP/4B8D/+Afz//gP///8D////j//8=
</value>
  </data>
</root>